// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows.Input;
using Controls=WPAppStudio.Controls;
using Entities=WPAppStudio.Entities;
using EntitiesBase=WPAppStudio.Entities.Base;
using IServices=WPAppStudio.Services.Interfaces;
using IViewModels=WPAppStudio.ViewModel.Interfaces;
using Localization=WPAppStudio.Localization;
using Repositories=WPAppStudio.Repositories;
using Services=WPAppStudio.Services;
using ViewModelsBase=WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of Info_Info ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class Info_InfoViewModel : EntitiesBase.BindableBase, IViewModels.IInfo_InfoViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ISpeechService _speechService;
		private readonly IServices.IShareService _shareService;
		private readonly IServices.ILiveTileService _liveTileService;
		private readonly IServices.ILockScreenService _lockScreenService;
		private readonly Repositories.IInfo_info _info_info;
		private readonly Repositories.ISpecialPlaces_specialplacesCollection _specialPlaces_specialplacesCollection;
		private readonly Repositories.IHistory_historywiki _history_historywiki;
		private readonly Repositories.IGeography_Geography _geography_Geography;
		private readonly Repositories.IStatistics_Statistics _statistics_Statistics;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="Info_InfoViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="info_info">The Info_info.</param>
        /// <param name="specialPlaces_specialplacesCollection">The Special Places_specialplaces Collection.</param>
        /// <param name="history_historywiki">The History_historywiki.</param>
        /// <param name="geography_Geography">The Geography_ Geography.</param>
        /// <param name="statistics_Statistics">The Statistics_ Statistics.</param>
        public Info_InfoViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ISpeechService speechService, IServices.IShareService shareService, IServices.ILiveTileService liveTileService, IServices.ILockScreenService lockScreenService, Repositories.IInfo_info info_info, Repositories.ISpecialPlaces_specialplacesCollection specialPlaces_specialplacesCollection, Repositories.IHistory_historywiki history_historywiki, Repositories.IGeography_Geography geography_Geography, Repositories.IStatistics_Statistics statistics_Statistics)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
			_lockScreenService = lockScreenService;
			_info_info = info_info;
			_specialPlaces_specialplacesCollection = specialPlaces_specialplacesCollection;
			_history_historywiki = history_historywiki;
			_geography_Geography = geography_Geography;
			_statistics_Statistics = statistics_Statistics;
        }
		
		private string _currentInfo_InfoHtmlControl;

        /// <summary>
        /// CurrentInfo_InfoHtmlControl property.
        /// </summary>		
        public string CurrentInfo_InfoHtmlControl
        {
            get
            {
                if(_currentInfo_InfoHtmlControl == null)
					_currentInfo_InfoHtmlControl = _info_info.Get();
				return _currentInfo_InfoHtmlControl;     
            }
            set
            {
                SetProperty(ref _currentInfo_InfoHtmlControl, value);
            }
        }
		private ObservableCollection<Entities.specialplacesCollectionSchema> _specialPlaces_ListListControlCollection;

        /// <summary>
        /// SpecialPlaces_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<Entities.specialplacesCollectionSchema> SpecialPlaces_ListListControlCollection
        {
            get
            {
                if(_specialPlaces_ListListControlCollection == null)
					_specialPlaces_ListListControlCollection = _specialPlaces_specialplacesCollection.GetData();
				return _specialPlaces_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _specialPlaces_ListListControlCollection, value);
            }
        }
		private int _specialPlaces_ListListControlCollectionPageNumber;

        /// <summary>
        /// SpecialPlaces_ListListControlCollectionPageNumber property.
        /// </summary>		
        public int SpecialPlaces_ListListControlCollectionPageNumber
        {
            get
            {
				return _specialPlaces_ListListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _specialPlaces_ListListControlCollectionPageNumber, value);
            }
        }
		private Entities.specialplacesCollectionSchema _selectedSpecialPlaces_ListListControlCollection;

        /// <summary>
        /// SelectedSpecialPlaces_ListListControlCollection property.
        /// </summary>		
        public Entities.specialplacesCollectionSchema SelectedSpecialPlaces_ListListControlCollection
        {
            get
            {
				return _selectedSpecialPlaces_ListListControlCollection;
            }
            set
            {
                _selectedSpecialPlaces_ListListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.ISpecialPlaces_DetailViewModel>(_selectedSpecialPlaces_ListListControlCollection);
            }
        }
		private string _currentHistory_InfoHtmlControl;

        /// <summary>
        /// CurrentHistory_InfoHtmlControl property.
        /// </summary>		
        public string CurrentHistory_InfoHtmlControl
        {
            get
            {
                if(_currentHistory_InfoHtmlControl == null)
					_currentHistory_InfoHtmlControl = _history_historywiki.Get();
				return _currentHistory_InfoHtmlControl;     
            }
            set
            {
                SetProperty(ref _currentHistory_InfoHtmlControl, value);
            }
        }
		private string _currentGeography_InfoHtmlControl;

        /// <summary>
        /// CurrentGeography_InfoHtmlControl property.
        /// </summary>		
        public string CurrentGeography_InfoHtmlControl
        {
            get
            {
                if(_currentGeography_InfoHtmlControl == null)
					_currentGeography_InfoHtmlControl = _geography_Geography.Get();
				return _currentGeography_InfoHtmlControl;     
            }
            set
            {
                SetProperty(ref _currentGeography_InfoHtmlControl, value);
            }
        }
		private ObservableCollection<Entities.StatisticsSchema> _statistics_ListListControlCollection;

        /// <summary>
        /// Statistics_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<Entities.StatisticsSchema> Statistics_ListListControlCollection
        {
            get
            {
                if(_statistics_ListListControlCollection == null)
					_statistics_ListListControlCollection = _statistics_Statistics.GetData();
				return _statistics_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _statistics_ListListControlCollection, value);
            }
        }
		private int _statistics_ListListControlCollectionPageNumber;

        /// <summary>
        /// Statistics_ListListControlCollectionPageNumber property.
        /// </summary>		
        public int Statistics_ListListControlCollectionPageNumber
        {
            get
            {
				return _statistics_ListListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _statistics_ListListControlCollectionPageNumber, value);
            }
        }
		private Entities.StatisticsSchema _selectedStatistics_ListListControlCollection;

        /// <summary>
        /// SelectedStatistics_ListListControlCollection property.
        /// </summary>		
        public Entities.StatisticsSchema SelectedStatistics_ListListControlCollection
        {
            get
            {
				return _selectedStatistics_ListListControlCollection;
            }
            set
            {
                _selectedStatistics_ListListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.IStatistics_DetailViewModel>(_selectedStatistics_ListListControlCollection);
            }
        }

        /// <summary>
        /// Delegate method for the RefreshSpecialPlaces_ListListControlCollection command.
        /// </summary>
        public  void RefreshSpecialPlaces_ListListControlCollectionDelegate(int pageNumber= 0) 
        {
				SpecialPlaces_ListListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items =  _specialPlaces_specialplacesCollection.GetData();
                    SpecialPlaces_ListListControlCollection = items;
					SpecialPlaces_ListListControlCollectionPageNumber = 0;
				}
                else   
				{
					var items =  _specialPlaces_specialplacesCollection.GetData(pageNumber);
                    foreach (var item in items)                    
                        _specialPlaces_ListListControlCollection.Add(item);
				}
        }
		

        private ICommand _refreshSpecialPlaces_ListListControlCollection;

        /// <summary>
        /// Gets the RefreshSpecialPlaces_ListListControlCollection command.
        /// </summary>
        public ICommand RefreshSpecialPlaces_ListListControlCollection
        {
            get { return _refreshSpecialPlaces_ListListControlCollection = _refreshSpecialPlaces_ListListControlCollection ?? new ViewModelsBase.DelegateCommand<int>(RefreshSpecialPlaces_ListListControlCollectionDelegate); }
        }

        /// <summary>
        /// Delegate method for the RefreshStatistics_ListListControlCollection command.
        /// </summary>
        public  void RefreshStatistics_ListListControlCollectionDelegate(int pageNumber= 0) 
        {
				Statistics_ListListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items =  _statistics_Statistics.GetData();
                    Statistics_ListListControlCollection = items;
					Statistics_ListListControlCollectionPageNumber = 0;
				}
                else   
				{
					var items =  _statistics_Statistics.GetData(pageNumber);
                    foreach (var item in items)                    
                        _statistics_ListListControlCollection.Add(item);
				}
        }
		

        private ICommand _refreshStatistics_ListListControlCollection;

        /// <summary>
        /// Gets the RefreshStatistics_ListListControlCollection command.
        /// </summary>
        public ICommand RefreshStatistics_ListListControlCollection
        {
            get { return _refreshStatistics_ListListControlCollection = _refreshStatistics_ListListControlCollection ?? new ViewModelsBase.DelegateCommand<int>(RefreshStatistics_ListListControlCollectionDelegate); }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechInfo_InfoHtmlControlCommand command.
        /// </summary>
        public  void TextToSpeechInfo_InfoHtmlControlCommandDelegate() 
        {
	
				_speechService.TextToSpeech(CurrentInfo_InfoHtmlControl);
        }
		

        private ICommand _textToSpeechInfo_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the TextToSpeechInfo_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand TextToSpeechInfo_InfoHtmlControlCommand
        {
            get { return _textToSpeechInfo_InfoHtmlControlCommand = _textToSpeechInfo_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechInfo_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the ShareInfo_InfoHtmlControlCommand command.
        /// </summary>
        public  void ShareInfo_InfoHtmlControlCommandDelegate() 
        {
	
				_shareService.Share(@"Info", CurrentInfo_InfoHtmlControl);
        }
		

        private ICommand _shareInfo_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the ShareInfo_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand ShareInfo_InfoHtmlControlCommand
        {
            get { return _shareInfo_InfoHtmlControlCommand = _shareInfo_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(ShareInfo_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartInfo_InfoHtmlControlCommand command.
        /// </summary>
        public  void PinToStartInfo_InfoHtmlControlCommandDelegate() 
        {
	
				_liveTileService.PinToStart(typeof(IViewModels.IInfo_InfoViewModel), CreateTileInfoInfo_InfoHtmlControl());
        }
		

        private ICommand _pinToStartInfo_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the PinToStartInfo_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand PinToStartInfo_InfoHtmlControlCommand
        {
            get { return _pinToStartInfo_InfoHtmlControlCommand = _pinToStartInfo_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartInfo_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechHistory_InfoHtmlControlCommand command.
        /// </summary>
        public  void TextToSpeechHistory_InfoHtmlControlCommandDelegate() 
        {
	
				_speechService.TextToSpeech(CurrentHistory_InfoHtmlControl);
        }
		

        private ICommand _textToSpeechHistory_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the TextToSpeechHistory_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand TextToSpeechHistory_InfoHtmlControlCommand
        {
            get { return _textToSpeechHistory_InfoHtmlControlCommand = _textToSpeechHistory_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechHistory_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the ShareHistory_InfoHtmlControlCommand command.
        /// </summary>
        public  void ShareHistory_InfoHtmlControlCommandDelegate() 
        {
	
				_shareService.Share(@"History", CurrentHistory_InfoHtmlControl);
        }
		

        private ICommand _shareHistory_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the ShareHistory_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand ShareHistory_InfoHtmlControlCommand
        {
            get { return _shareHistory_InfoHtmlControlCommand = _shareHistory_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(ShareHistory_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartHistory_InfoHtmlControlCommand command.
        /// </summary>
        public  void PinToStartHistory_InfoHtmlControlCommandDelegate() 
        {
	
				_liveTileService.PinToStart(typeof(IViewModels.IInfo_InfoViewModel), CreateTileInfoHistory_InfoHtmlControl());
        }
		

        private ICommand _pinToStartHistory_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the PinToStartHistory_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand PinToStartHistory_InfoHtmlControlCommand
        {
            get { return _pinToStartHistory_InfoHtmlControlCommand = _pinToStartHistory_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartHistory_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechGeography_InfoHtmlControlCommand command.
        /// </summary>
        public  void TextToSpeechGeography_InfoHtmlControlCommandDelegate() 
        {
	
				_speechService.TextToSpeech(CurrentGeography_InfoHtmlControl);
        }
		

        private ICommand _textToSpeechGeography_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the TextToSpeechGeography_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand TextToSpeechGeography_InfoHtmlControlCommand
        {
            get { return _textToSpeechGeography_InfoHtmlControlCommand = _textToSpeechGeography_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechGeography_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the ShareGeography_InfoHtmlControlCommand command.
        /// </summary>
        public  void ShareGeography_InfoHtmlControlCommandDelegate() 
        {
	
				_shareService.Share(@"Geography", CurrentGeography_InfoHtmlControl);
        }
		

        private ICommand _shareGeography_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the ShareGeography_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand ShareGeography_InfoHtmlControlCommand
        {
            get { return _shareGeography_InfoHtmlControlCommand = _shareGeography_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(ShareGeography_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartGeography_InfoHtmlControlCommand command.
        /// </summary>
        public  void PinToStartGeography_InfoHtmlControlCommandDelegate() 
        {
	
				_liveTileService.PinToStart(typeof(IViewModels.IInfo_InfoViewModel), CreateTileInfoGeography_InfoHtmlControl());
        }
		

        private ICommand _pinToStartGeography_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the PinToStartGeography_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand PinToStartGeography_InfoHtmlControlCommand
        {
            get { return _pinToStartGeography_InfoHtmlControlCommand = _pinToStartGeography_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartGeography_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
	
				_lockScreenService.SetLockScreen("LockScreen-a4f8e94c-8c40-4bc4-b381-b41c3e7689f6.jpg");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new ViewModelsBase.DelegateCommand(SetLockScreenCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the AboutCommand command.
        /// </summary>
        public  void AboutCommandDelegate() 
        {
	
				_navigationService.NavigateTo<IViewModels.IAboutViewModel>();
        }
		

        private ICommand _aboutCommand;

        /// <summary>
        /// Gets the AboutCommand command.
        /// </summary>
        public ICommand AboutCommand
        {
            get { return _aboutCommand = _aboutCommand ?? new ViewModelsBase.DelegateCommand(AboutCommandDelegate); }
        }
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the Info_InfoHtmlControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfoInfo_InfoHtmlControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = @"Info",
                Title = @"Info",
                BackTitle = @"Info",
                BackContent = CurrentInfo_InfoHtmlControl,
                Count = 0,
                BackgroundImagePath = string.Empty,
                BackBackgroundImagePath = string.Empty,
                LogoPath = "Logo-4ff76cb8-5c06-4bf6-bcdc-64756a06d71a.png"
            };
            return tileInfo;
        }
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the History_InfoHtmlControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfoHistory_InfoHtmlControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = @"History",
                Title = @"History",
                BackTitle = @"History",
                BackContent = CurrentHistory_InfoHtmlControl,
                Count = 0,
                BackgroundImagePath = string.Empty,
                BackBackgroundImagePath = string.Empty,
                LogoPath = "Logo-4ff76cb8-5c06-4bf6-bcdc-64756a06d71a.png"
            };
            return tileInfo;
        }
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the Geography_InfoHtmlControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfoGeography_InfoHtmlControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = @"Geography",
                Title = @"Geography",
                BackTitle = @"Geography",
                BackContent = CurrentGeography_InfoHtmlControl,
                Count = 0,
                BackgroundImagePath = string.Empty,
                BackBackgroundImagePath = string.Empty,
                LogoPath = "Logo-4ff76cb8-5c06-4bf6-bcdc-64756a06d71a.png"
            };
            return tileInfo;
        }
    }
}
